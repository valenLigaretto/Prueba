# -*- coding: utf-8 -*-
"""Prueba Tecnica Valentina Cardona Ligarreto

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qUNAa5T5s0wKwsQNyDkVocI4C9jAh9Hk
"""

import pandas as pd
import matplotlib.pyplot as plt

data1 = pd.read_csv('/content/segmentacion.csv', encoding="latin1",  delimiter=';')
data1 = data1[['mcodes','terminal','tecnologiaaf','modeloaf','grupo_version','mcc','ciudadfin','seccionalfin'
              ,'trx_dia_dos','trx_dia_tres','trx_dia_cuatro','trx_dia_cinco','trx_dia_seis'
              ,'trx_mes_tres','trx_mes_dos','trx_mes_uno','prom_mes_tres','prom_mes_dos','prom_mes_uno', 'fecha_creacion_terminal']]
data1.head()

data1['Fecha'] = pd.to_datetime(data1['fecha_creacion_terminal'], format='%d/%m/%Y')
data1['añomes'] = data1['Fecha'].dt.year
# Group data by añomes and count occurrences
grouped_data = data1.groupby('añomes').size()

fig, ax = plt.subplots(figsize=(10,6))
ventas_trx_mes_uno = data1.groupby('añomes')['trx_mes_uno'].sum()
ventas_trx_mes_dos = data1.groupby('añomes')['trx_mes_dos'].sum()
ventas_trx_mes_tres = data1.groupby('añomes')['trx_mes_tres'].sum()

ax.plot(ventas_trx_mes_uno.index, ventas_trx_mes_uno.values, label ='trx_mes_uno')
ax.plot(ventas_trx_mes_dos.index, ventas_trx_mes_dos.values, label ='trx_mes_dos')
ax.plot(ventas_trx_mes_tres.index, ventas_trx_mes_tres.values, label ='trx_mes_tres ')

ax.set_xlabel('Año-Mes')
ax.set_ylabel('Cantidad de transacciones por mes')
plt.xticks(rotation=45)
ax.legend(loc = 'upper left')
plt.show()

data1['prom_mes_uno'] = pd.to_numeric(data1['prom_mes_uno'], errors='coerce')
data1['prom_mes_dos'] = pd.to_numeric(data1['prom_mes_dos'], errors='coerce')
data1['prom_mes_tres'] = pd.to_numeric(data1['prom_mes_tres'], errors='coerce')

fig, axs = plt.subplots(3, 1, figsize=(10, 12))

top10 = data1.groupby('ciudadfin')['prom_mes_tres'].sum().sort_values(ascending=False).head(10)
top10_1 = data1.groupby('ciudadfin')['prom_mes_uno'].sum().sort_values(ascending=False).head(10)
top10_2 = data1.groupby('ciudadfin')['prom_mes_dos'].sum().sort_values(ascending=False).head(10)

top10_1 = top10_1.sort_values(ascending=True)
top10_2 = top10_2.sort_values(ascending=True)
top10 = top10.sort_values(ascending=True)

axs[0].barh(top10_1.index, top10_1, color='royalblue')
axs[0].set_title('Top 10 prom_mes_uno')
axs[0].set_xlabel('Promedio')
axs[0].set_ylabel('Ciudad')

# Gráfico para prom_mes_dos
axs[1].barh(top10_2.index, top10_2, color='sandybrown')
axs[1].set_title('Top 10 prom_mes_dos')
axs[1].set_xlabel('Promedio')
axs[1].set_ylabel('Ciudad')

# Gráfico para prom_mes_tres
axs[2].barh(top10.index, top10, color='lightgreen')
axs[2].set_title('Top 10 prom_mes_tres')
axs[2].set_xlabel('Promedio')
axs[2].set_ylabel('Ciudad')

# Ajustar el espacio entre subgráficos
plt.tight_layout()

# Mostrar los gráficos
plt.show()

import matplotlib.pyplot as plt

# Crear tres subgráficos
fig, axs = plt.subplots(3, 1, figsize=(10, 12))

# Gráfico para prom_mes_uno